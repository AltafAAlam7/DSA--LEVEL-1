class RandomizedCollection {

    Random r;
    HashMap<Integer,HashSet<Integer>> map ;
    ArrayList<Integer> list;
    public RandomizedCollection() {
        r = new Random();
        map = new HashMap<>();
        list = new ArrayList<>();
    }
    
    public boolean insert(int val) {
        list.add(val);
        if(map.containsKey(val)){
            HashSet<Integer> set = map.get(val);
            set.add(list.size()-1);
            map.put(val,set);
            return false;
        }
        else{
            HashSet<Integer> set = new HashSet<>();
            set.add(list.size()-1);
            map.put(val,set);
            return true;
        }
    }
    
    public boolean remove(int val) {
        if(map.containsKey(val)==false){
            return false;
        }
        int vidx = map.get(val).iterator().next();
        int lidx = list.size()-1;
        int lval = list.get(lidx);
        swap(list,vidx,lidx);
        
        list.remove(lidx);
        
        if(map.get(val).size()==1){
            map.remove(val);
        }
        else{
            map.get(val).remove(vidx);
        }
        if(map.containsKey(lval)){
        HashSet<Integer> set = map.get(lval);
        set.remove(lidx);
        set.add(vidx);
        map.put(lval,set);
        }
        
        return true;
    }
     private void swap(ArrayList<Integer> list, int i,int j){
            int val = list.get(i);
            int lval = list.get(j);
            
            list.set(i,lval);
            list.set(j,val);
            
    }
    
    public int getRandom() {
        int idx = r.nextInt(list.size());
        return list.get(idx);
    }
}

/**
 * Your RandomizedCollection object will be instantiated and called as such:
 * RandomizedCollection obj = new RandomizedCollection();
 * boolean param_1 = obj.insert(val);
 * boolean param_2 = obj.remove(val);
 * int param_3 = obj.getRandom();
 */