// { Driver Code Starts
//Initial Template for Java

import java.io.*;
import java.util.*;

class GFG {
    public static void main(String args[]) throws IOException {
        BufferedReader read =
            new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(read.readLine());
        while (t-- > 0) {
            int N = Integer.parseInt(read.readLine());
            
            String S1[] = read.readLine().split(" ");
            String S2[] = read.readLine().split(" ");
            
            int[] X = new int[N];
            int[] Y = new int[N];
            
            for(int i=0; i<N; i++)
            {
                X[i] = Integer.parseInt(S1[i]);
                Y[i] = Integer.parseInt(S2[i]);
            }

            Solution ob = new Solution();
            System.out.println(ob.numOfPairs(X,Y,N));
        }
    }
}// } Driver Code Ends


//User function Template for Java

class Solution {
    static int numOfPairs(int[] x, int[] y, int n) {
        // code here
        int count = 0;
        HashMap<Integer,Integer> xmap  =new HashMap<>();
        HashMap<Integer,Integer> ymap  =new HashMap<>();
        HashMap<String,Integer> map  =new HashMap<>();
        
        for(int i=0;i<n;i++){
            xmap.put(x[i],xmap.getOrDefault(x[i],0)+1);
            count+=xmap.get(x[i])-1;
            
            ymap.put(y[i],ymap.getOrDefault(y[i],0)+1);
            count+=ymap.get(y[i])-1;
            
            String key = "" + x[i]+ "*" + y[i];
        
            if(map.containsKey(key)){
                count -= (2*map.get(key));
                map.put(key,map.get(key)+1);
            }
            else{
                map.put(key,1);
            }
            
        }
        return count;
    }
};